org.gradle.jvmargs=-Xmx8G -XX:MaxMetaspaceSize=4G -XX:ReservedCodeCacheSize=512m -XX:+HeapDumpOnOutOfMemoryError
android.useAndroidX=true
android.enableJetifier=false
# (Jetifier disabled to remove transform cost; re-enable if any legacy support lib dependency breaks)
org.gradle.parallel=true
org.gradle.caching=true
org.gradle.daemon=true
org.gradle.configureondemand=true
# Revert Kotlin compiler to default out-of-process (in-process can cause reflective access issues)
# kotlin.compiler.execution.strategy=in-process
kotlin.incremental=true
# Snapshot-based incremental compilation (Gradle 8 + recent Kotlin) â€“ safe fallback if unsupported
kotlin.incremental.useClasspathSnapshot=true
# Consider disabling Jetifier if all dependencies are AndroidX:
# (Jetifier already disabled above)
# Configuration cache can further speed up builds, but enable only after verifying plugin compatibility:
# Disabled configuration cache due to reflective access errors (ReferenceQueue). Re-enable after upgrading Flutter/Gradle.
# org.gradle.configuration-cache=true

# Limit worker threads if machine thrashes (uncomment & tune):
# org.gradle.workers.max=4

# Speeds up resource processing stability (optional):
# android.nonTransitiveRClass=true
